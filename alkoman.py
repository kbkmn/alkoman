import os
import datetime
import re
import math

from settings import *
from bot import Bot
from database import Database
from extras import pluralize, check_for_kadyrov, check_for_words

class Alkoman:
    def __init__(self):
        self.bot = Bot(
            TELEGRAM_BOT_TOKEN,
            TELEGRAM_WEBHOOK_URL,
            int(os.environ.get("PORT", TELEGRAM_WEBHOOK_PORT)),
            on_message_recieved=self.message_recieved
        )
        self.database = Database(POSTGRESQL_DB_URI)

        self.bot.add_job((0, 1, 2, 3, 4, 5, 6), datetime.time(hour=20, minute=59, second=00), lambda context: self.top())
        self.bot.add_job((4, ), datetime.time(hour=16, minute=00, second=00), lambda context: self.weekend())

        self.bot.add_command("stat", self.stat)
        self.bot.add_command("help", self.help)
        self.bot.add_command("idle", self.idle)

        self.bot.run()

    def message_recieved(self, chat, user, message):
        if check_for_kadyrov(message):
            self.bot.send_message(chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ –¥–æ–Ω")
        
        words = message.split()
        word_count = len(list(filter(lambda value: len(value) >= 3, words)))
        slur_count = check_for_words(SLURS, message)
        tennis_count = check_for_words(["—Ç–µ–Ω–Ω–∏—Å"], message)

        self.database.find_or_create_user(user.id, user.first_name)
        self.database.increment_stats(user.id, word_count, slur_count, tennis_count)

    def top(self):
        chat_id = -1001036605543
        valera_user_id = 213533559

        valera = self.database.get_user(id=valera_user_id)
        users = self.database.get_top()

        if not users:
            self.bot.send_message(chat_id, "–ò–¥–∏ –Ω–∞ —Ö—É–π!")
        else:
            message = "–ì–ª–∞–≤–Ω—ã–µ –ø–∏–∑–¥–∞–±–æ–ª—ã:\n"
            for i, item in enumerate(users):
                name = item['name']
                word_count_today = int(item['word_count_today'])

                message += f"{i + 1}. {name} ‚Äì {'%s %s' % (word_count_today, pluralize(word_count_today, ['—Å–ª–æ–≤–æ', '—Å–ª–æ–≤–∞', '—Å–ª–æ–≤']))}\n"

            if valera:
                valera_name = valera['name']
                valera_tennis_count = int(valera['tennis_count_today'])

                message += f"\n{valera_name} –∑–≥–∞–¥–∞–≤ –ø—Ä–æ —Ç–µ–Ω—ñ—Å {valera_tennis_count} {pluralize(valera_tennis_count, ['—Ä–∞–∑', '—Ä–∞–∑–∏', '—Ä–∞–∑'])}"

            self.bot.send_message(chat_id, message)

    def weekend(self):
        chat_id = -1001036605543
        users = self.database.get_all_users()
        mentions = {}

        if not users:
            self.bot.send_message(chat_id, "–•—É–π –≤–∞–º, –∞ –Ω–µ –æ–ø—Ä–æ—Å")
        else:
            message = "–ö–æ–Ω–µ—Ü –¥–Ω—è –Ω–∞—Å—Ç—É–ø–∏–ª –∏ –∫–æ–Ω–µ—Ü —Ä–∞–±–æ—á–∏–π –Ω–µ–¥–µ–ª–∏ –≤–º–µ—Å—Ç–µ —Å –Ω–∏–º. –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–π—Ç–µ, —á—Ç–æ —É –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Å–ª—É—á–∏–ª–æ—Å—å –¥–∞–≤–∞–π—Ç–µ, —á–µ–≥–æ –≤–∏–¥–µ–ª–∏/—Å–ª—ã—à–∞–ª–∏, –µ—Å—Ç—å –ª–∏ –¥–≤–∏–∂—É—Ö–∏ –∫–∞–∫–∏–µ. –í –æ–±—â–µ–º –¥–µ–ª–∏—Ç–µ—Å—å –∫–ª—ë–≤—ã–º –∏ –Ω–µ–∫–ª—ë–≤—ã–º —Ç–æ–∂–µ\n"
            for i, item in enumerate(users):
                mentions[item['id']] = item['name']
            
            self.bot.send_message(chat_id, message, mentions=mentions)

    def stat(self, chat, user, message):
        user = self.database.get_user(id=user.id)
        valera_user_id = 213533559

        if not user:
            self.bot.send_message(chat.id, "–ù–∞—á–∏–Ω–∞–π –ø–µ–∑–¥–µ—Ç—å, –∫—É–∑–Ω–µ—á–∏–∫!")
        else:
            name = user['name']
            message_count = int(user['message_count'])
            word_count = int(user['word_count'])
            slur_count = int(user['slur_count'])
            male = user['gender']

            if user['id'] == valera_user_id:
                message = f"{name}, —Ç–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ {message_count} {pluralize(message_count, ['–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è', '–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è', '–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å'])} ‚Äì {word_count} {pluralize(message_count, ['—Å–ª–æ–≤–æ', '—Å–ª–æ–≤–∞', '—Å–ªi–≤'])} ({slur_count} {pluralize(slur_count, ['—Å–ª–æ–≤–æ', '—Å–ª–æ–≤–∞', '—Å–ªi–≤'])} –º–∞—Ç—é–∫–∏) üá∫üá¶"
            else:
                if male:
                    message = f"{name}, —Ç—ã –Ω–∞–ø–µ–∑–¥–µ–ª {message_count} {pluralize(message_count, ['—Å–æ–æ–±—â–µ–Ω–∏–µ', '—Å–æ–æ–±—â–µ–Ω–∏—è', '—Å–æ–æ–±—â–µ–Ω–∏–π'])} ‚Äì {word_count} {pluralize(word_count, ['—Å–ª–æ–≤–æ', '—Å–ª–æ–≤–∞', '—Å–ª–æ–≤'])} ({slur_count} {pluralize(slur_count, ['—Å–ª–æ–≤–æ', '—Å–ª–æ–≤–∞', '—Å–ª–æ–≤'])} –º–∞—Ç–µ—Ä—à–∏–Ω—ã)"
                else:
                    message = f"{name}, —Ç—ã –Ω–∞–ø–µ–∑–¥–µ–ª–∞ {message_count} {pluralize(message_count, ['—Å–æ–æ–±—â–µ–Ω–∏–µ', '—Å–æ–æ–±—â–µ–Ω–∏—è', '—Å–æ–æ–±—â–µ–Ω–∏–π'])} ‚Äì {word_count} {pluralize(word_count, ['—Å–ª–æ–≤–æ', '—Å–ª–æ–≤–∞', '—Å–ª–æ–≤'])} ({slur_count} {pluralize(slur_count, ['—Å–ª–æ–≤–æ', '—Å–ª–æ–≤–∞', '—Å–ª–æ–≤'])} –º–∞—Ç–µ—Ä—à–∏–Ω—ã)"

            self.bot.send_message(chat.id, message)

    def help(self, chat, user, message):
        user = self.database.get_user(id=user.id)

        if user:
            name = user['name']
            
            self.bot.send_message(
                chat.id,
                f"{name}, –∏–¥–∏ –Ω–∞ —Ö—É–π!"
            )

    def idle(self, chat, user, message):
        match = re.match(r'^/idle @([^\s]+)', message)

        if match:
            user = self.database.get_user(username=match[1])

            if user:
                if user['last_message']:
                    difference = datetime.now() - user['last_message']
                    minutes = math.floor(difference.total_seconds() / 60)
                    hours = math.floor(minutes / 60)
                    days = math.floor(hours / 24)

                    if minutes < 1:
                        message = "–†–∞–∑—É–π –≥–ª–∞–∑–∞"
                    else:
                        message = f"{user['name']} –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –ø–∏—Å–∞–ª " + ''.join(
                            f"{days} {pluralize(days, ['–¥–µ–Ω—å', '–¥–Ω—è', '–¥–Ω–µ–π'])}" if days > 0 else '',
                            f"{hours} {pluralize(hours, ['—á–∞—Å', '—á–∞—Å–∞', '—á–∞—Å–æ–≤'])}" if hours > 0 else '',
                            f"{minutes} {pluralize(minutes, ['–º–∏—É–Ω—É—Ç—É', '–º–∏–Ω—É—Ç—ã', '–º–∏–Ω—É—Ç'])}" if minutes > 0 else '',
                            " –Ω–∞–∑–∞–¥"
                        )
                else:
                    message = "–ù–∏–µ–±—É!"
            else:
                message = "–≠—Ç–æ –µ—â—ë –∫—Ç–æ?"

            self.bot.send_message(chat.id, message)

if __name__ == "__main__":
    Alkoman()